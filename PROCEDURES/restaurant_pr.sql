DELIMITER //
CREATE PROCEDURE PR_FOOD_ORDER(IN RANDOM_ORDER_ID INT,IN ITEM VARCHAR(100),IN SEATNUM VARCHAR(30),IN QTY INT)
BEGIN
DECLARE AMOUNT INT;
DECLARE TEMP_QTY INT;
IF (FN_IS_SEAT_AVAILABLE(SEATNUM)=1) THEN
IF (FN_IS_ITEM_AVAILABLE(ITEM)=1) THEN
	SELECT REMAINING_QUANTITY INTO TEMP_QTY FROM ITEM_SCHEDULES WHERE ITEM_NAME=ITEM AND (SELECT FN_GET_SESSIONID()=FOOD_TYPE_ID); 
IF ((QTY>0) AND (QTY<=TEMP_QTY) ) THEN
IF (SELECT FN_CHECK_ORDERCOUNT(SEATNUM)=1) THEN
	SELECT'Order is Taken';
	SELECT RATE INTO AMOUNT FROM MENU_ITEMS WHERE ITEMS=ITEM;
	INSERT INTO ORDER_RECORDS(SEATNO,ORDER_ID,ITEM,QUANTITY,STATUS) VALUES(SEATNUM,RANDOM_ORDER_ID,ITEM,QTY,'ORDERED');
	UPDATE ITEM_SCHEDULES SET REMAINING_QUANTITY=REMAINING_QUANTITY-QTY WHERE ITEM_NAME=ITEM AND (SELECT FN_GET_SESSIONID()=FOOD_TYPE_ID);
	INSERT INTO BILL_DETAIL(ORDER_ID,ITEM,PRICE) VALUES(RANDOM_ORDER_ID,ITEM,(QTY*AMOUNT));
  ELSE SELECT 'Sorry your Maximum order is reached';
END IF;
  ELSE SELECT ' Please Enter valid quantity',TEMP_QTY AS 'AVAILABLE QUANTITY IS';
END IF;
  ELSE SELECT'Item Not Available';
	SELECT ITEM_NAME FROM ITEM_SCHEDULES WHERE (SELECT FN_GET_SESSIONID()=FOOD_TYPE_ID)   ; 
END IF;
  ELSE SELECT'Seat Not Available';
END IF;
END//
DELIMITER ;
